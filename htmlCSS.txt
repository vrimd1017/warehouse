html

이 정리는 생활코딩의 html강의를 기반으로 정리한 것임.(opentutorials.org)

html.
HyperTextMarkupLanguage.
하이퍼 텍스트 --> 기능. :: Webpage의 Link기능.
Mark up :: 마크업이라는 형식을 가진
Language :: 프로그래밍 언어.

즉, HyperText를 가장 큰 특징으로 하는 Markup형식의 프로그래밍 언어.
	
Language의 핵심은 약속.
컴퓨터를 제어하고 싶다면, 사람과 사람사이에 소통이 있듯이 관련된 약속이 필요함.
이를 컴퓨터 언어/컴퓨터 프로그래밍 언어라고 함.

html은 웹 브라우저에 표시되는 웹 페이지를 만들어달라고 요청하는 언어임.
사람과 컴퓨터 사이의 약속 + 웹 브라우저 사이에서 서로가 이해할 수 있는 약속.



##기본문법
태그.
Html에서 가장 중요한 문법이자 특징.
Markup은 Tag와 밀접한 관계를 가짐.
html의 중요한 특징 :: 굉장히 쉬움. 어떤 언어를 배워도 이거보단 쉬우기 힘듬.
20분이면 html의 문법 마스터가 가능.

html파일을 만들어서 웹에 띄워볼 것.
window는 그냥 메모장에 글씨를 입력.
이후 저장시 확장자를 html로. 모든 파일로 지정. utf-8지정.
확장자가 html이란것은 html파일이란 것. 실행한다면 확장자에 의해서 OS에서 웹 브라우저로 열어야한다는 것을 알고 그렇게 실행이 됨.
일단은 이렇게 하고 실행을 하게되면 진짜 그대로 출력이 됨. 아래에서부터 이제 태그를 활용함.

html파일은 편집기고 (메모장), 브라우저에 띄워놓은것은 뷰.
1. 가장 중요한 부분을 진하게 표현하고 싶음. <strong>태그를 통해서 감싸줌.
웹브라우저는 html을 읽게 하면 처음부터 하나하나 읽게 하면서
<strong>이라는 태그(시작태그)를 만나면,
뒤의 내용을 진하게 강조표시해라!라는 약속을 받아들임 이때,
</strong>이라는 태그(닫히는태그)를 만날때 까지 강조표시하게 됨.

태그는 html태그에서 가장 중요하고, 태그를 이해햇다면 문법 70%는 이해한 것.

2. 제목을 달고싶다면,  
편집기에서 줄바꿈을 하고
제일 첫줄에 제목을 달아준다고 하더라도, view인 브라우저에서는 띄워지지 않음.
이어서 표시가 됨.
제목은 <h1>과 같은 태그로 이뤄짐 heading1의 약자.
제목은 굵고 큰 문자이며, 줄바꿈을 한다. 라는 약속이 있음.
소제목의 경우 h2, h3와 같이 사용하여 h5까지 가능함.

여기서 핵심은 시작태그로 시작하여 닫히는태그로 끝난다는게 중요함.

-----

태그만으론 기능이 조금 부족함
속성.이라는 문법이 있음.
속성을 읽히면 html의 문법은 끝임.
그 다음에는 hypertext. 문서와 문서가 연결되어있다는 그 특성을, html코드를 통해 표현할 것임.
<a>태그가 링크를 거는 태그임. anchor의 약자. 배의 닻
태그만 쓴다고 링크가 걸리진 않음. 정보가 불충분 하기때문임.
href라는 속성을 입력하여 링크를 연결시킬 수 있음.
이런 태그사용에 있어서 정보의 불충분 해결을 위해 나타난 문법이 속성임.
+새로운 탭에서 열고싶다면 target속성에 _blank를 넣어주면 새로운 탭으로 열림.
+title속성을 통해서는 hover시에 해당 링크의 정보를 나타내어 줄 수 있음.

---

태그의 중첩. 무엇을 할 수 있는지.
list태그.
<li>태그를 각각의 항목을 감싸줌.
이때, li태그는 단독으로 사용되지 않음.
성격이 다른 리스트를 표현해야 될 수 있음.
이럴때, 시각적으로 구분 될 수 있도록 작성이 가능함.
성격이 같은 태그를 하나의 태그로 묶어줌.(<ui>)
이렇게 태그로 묶어주는것을 통해서 그룹핑이 가능함.
여기서 핵심은. 태그안에는 또다른 태그가 존재 할 수 있다는 것임.
가독성을 위해 태그 내부에서는 조금띄워주는것으로.
리스트에도 순서가 있는 리스트와 순서가 없는 리스트가 있음.
순서가 필요한 경우에는 <ol>로 감싸주면 됨.	orderedList, unorderedList

------

문서의 구조
탭에 파일의 이름이 표시되고있음.
탭에는 웹 페이지의 가장 대표적격임.
<title>태그를 사용하여 이를 지정해줌.
글씨가 깨질때에는 
<meta charset="utf-8">를 넣어주면 됨.

이전의 태그들과 위의 두 태그는 성격이 조금 다름.
아래의 태그들은 웹 브라우저의 본문에 해당되는 태그들.
위의 두 태그는 본문에 해당되지 않음. 본문은 아니지만 문서를 꾸며주는 역할.
부가적인 정보.
html은 위의 부가적인 정보와 본질적인 정보를 각각 다른 태그에 담도록 되어있음.
<head>와 <body>로 표현함. title은 head안에만 사용하도록...등. body에는 본문이..허용됨.
전체적으로 유일하게 허용되는 가장 큰 태그는 html이라는 태그로 감싸는 것.

---

DocType
이전의 형식이나 그런거에 비해 중요한건 아니지만 이해하기는 어려움.
Html을 시작할때 <!DOCTYPE html>을 넣어주어야 함.
DocType이란, Documnet Type 의 약자임.
어떤 html코드 작성에 앞서서, 이 코드가 어떤 방식의 html코드로 작성되었는지를 선언하는 부분.
과거에 14~16개 태그, 현재 약 140개.
기존이 퇴출되기도, 어떤건 새로 추가되기도, 어떤건 해당 태그의 의미가 바뀌기도 함.
어떤 태그를 작성 했다면, 웹 브라우저는 해당 태그가 어떤 표준/어떤 약속에 따라 제정된 태그인지를 브라우저가 알 필요가 있음.
이러한 점에서 이 문서는 어떤 표준을 따르고 있는 태그라는것을 브라우저에 알려주는게 DOCTYPE.

현 시점에서는 html5에 접어들면서
<!DOCTYPE html>로 단일화 되었음. 그냥 이렇게 쓰면 됨.

-----

태그를 다 보는건 쉽지 않으며, 의미가 없음.

-----

주요태그
오래된 혹은 사요애빈도가 높은 태그의 순서.

<P> 
paragraph.단락.줄바꿈 + 여백을 통해 단락을 구분함.
더 간격넓히고자할 때에는 <br> 혹은 <p>태그의 속성을 사용함.css를 통해 디자인.

<br>
줄바꿈. A forced line-break.
void element. 내용이 없는 태그. :: 열리는 태그 하나만 있으면 됨.
하나의 단락임을 나타내기 위해서는 <p>태그를 사용해 주는게 좋음.
<br>은 시각적으로 띄우줄 뿐.
단락 구분을 위해서 <br>쓰는건 좋은방법은 아님.

<img>
웹 페이지에 img를 포함하는 방법.
pixabay. 여러 이미지를 저작권 구애받지 않고 제공해주는 사이트.
닫을 필요 없는 태그.
src 속성을 사용하여, 파일의 이름을 지정.
이때, 파일이 같은 디렉터리에 있어야 함. 상대경로 절대경로 되나 해봐야되나.
width="100" 일경우 100픽셀로 지정됨.
height = "300" 일경우 300픽셀로 지정됨.
강제로 맞추기때문에 원본의 비율과는 달라질 수 있음.
alt속성을 써주는게 좋음.(alternative text)
이미지가 오류가 나와 제대로 이미지를 보여주지못할 때 alt속성의 값이 화면에 표시가 됨.
title속성을 통해서, hover시에 툴팁이 나오도록 할 수 있음.

<table>
<td>태그. table data. 실제 데이터를 의미함. 항목 하나하나를 묶어주는 역할.
<tr>태그. table row. 
<tabe>태그는 테이블 모든 요소를 감싸는 최상단 태그.
table의 border속성. 1,2등을 줘서 간단하게 몇가지 테이블의 선 종류를 지정 가능함. css사용함.
예전에는 table사용하여 레이아웃을 짜기도 햇지만, 기본적인 기능은 아님.

<form>
로그인 회원가입, 물건을 사거나 등등할때
서버로 값을 전송할 때 사용하는, 값을입력 및 선택하는 부분을 Form이라고 함.
사용자의 입력값을 서버로 전송할 때 사용하는 것(들).
<input>.
type속성을 통해서 input의 종류를 결정.
text, password 등등
submit. 제출.태그.
입력한 정보가 어디에 있는 서버로 전송할지에 대한 정보가 부족함.
<form>태그의 action속성을 이용. action속성에 전송할 주소를 입력. 해당 주소로 브라우저가 페이지 전환.
사용자가 입력한 값 구별을 위해서는 각각의 컨트롤에 name속성을 통해 이름을 부여.
서버에는 각각의 name속성의 이름으로 값이 전송됨.

폼 태그 중 사용자의 입력을 받는 태그.
<input type="text" name="id" value="default value">name은 필수. value는 사용자가 페이지 열었을때 기본으로 적힘.
<input type="password" name="" value=""/>
여러줄은 textarea
<textarea></textarea> input이 아님. 완전 새로운 태그.
cols :: column의 줄임말. 열. 50으로 하면 50글자가 입력될 만큼 폭이 커짐.
rows :: 10으로 입력하면 줄을 10줄 입력할 만큼 높이가 커짐.
기본값 defaultvalue는 따로 속성이 아닌 태그 안에 글을 쓰면 됨.
defaultvalue가 길 수 있는데 이를 태그의 속성으로 넣기 애매하기때문에 아예 태그 내 입력요소로 쓰게됨.

선택.
여러가지중 하나를 선택하도록 하는 방법.
dropdownList.
제한된 공간 안에서 여러가지 선택지를 선택할 수 있도록.
<option>태그를 통해 선택할 수 있도록 함.
이것만 하면 줄바꿈만 되는데 <select>라는 태그로 묶어주게되면 정상 작동. 콤보박스.
select에 속성으로 name을 지정해주어야 선택된 option이 전송됨.
이때, 선택은 보여지는 정보지만 실제 보내는 값을 다른값을 보내고 싶을 경우
option에 속성으로 value속성을 지정해주면 해당 값이 전송되게 됨.
여러 항목을 선택할 수 있게 하고싶을때에는 select에 multiple 속성 이름을 적어주면 됨.
다른 값은 없기때문에 multiple속성은 이름만 적어주는 것.
콤보박스에서는 쓰기 좀 그렇고 체크박스에서 자주 씀.

버튼
submit의 기본 내용인 제출을 바꾸고 싶다면 value속성을 지정.
<input type="button" value="버튼">
을 사용한다면 button의 uI를 만듬.
순수 html로는 의미가 없고, 자바스크립트 기술과 함께 쓰이게 됨.
onclick속성을 사용함. onclick="alert('hello world')"
type="reset"의 경우에는 해당 form의 모든 정보가 초기화됨.

hidden필드.
ui가 필요없거나 몰래 서버쪽으로 보내야 하는 정보.
ui없이 정보를 전송하고싶을 때.
input type="hidden" name="" value=""
화면상 표시는 되지 않지만 submit시에 정보는 함께 전송됨. value속성의 값이 전송.

label.
text : <input type="text"....와 같이 작성했던것을
<label>text</label>:
<input type="text" name="....와 같이 작성.
<label>로 감싸주면 이것은 무언가의 이름표다 라는 식의 표현임
for 속성을 통해서 input태그의 id값을 지정해줌.
이렇게 되면 label이 input태그를 연결짓게됨.
실제로 이런식으로 연결하게되면 label을 눌렀을 때에 input태그로 포커스가 맞춰짐.
id값을 입력하기 귀찮다면, 해당input 혹은 textarea같은 form요소를 label로 감싸줘도 됨.
체크박스시에도 더 넓은 영역을 클릭 가능한 영역으로 만드는 효과를 가져옴.
될수있다면 정보를 제공하는 측면에서 쓰는게 좋고, 작은 기능이지만 위와같은 유용한 기능을 가짐.

form의 method.
get과 post.
기본적인 형태는 url에 입력파라미터가 요청파라미터로 바뀌어서 name=value의 꼴로 전송됨.
이 방식은 get방식. default.
get방식의 경우에는 url에 붙어서 전송되기때문에 정보가 노출 될 위험이 있음.
정보를 감춰서 전달하고자 할 때 사용하는 방식이 post
method="post"시에는 파라미터가 url에 붙어서 전송되지 않음.
언제 get과 post?
form을 이용한다 --> 거의 100% post.
어떻게 전송하는지는 서버쪽 엔지니어의 권한.

파일 업로드.
사실 html보다는 서버쪽에서 처리해야할 일이 더 많음.
html관점에서만 보면.
<input type="file">
form을 통해 action으로 어디로 해당 파일을 보낼것인지를 결정.
전송은 역시 submit.
파일 전송을 위해서는 method="post".
enctype="multipart/form-data"로 지정해 주어야 함.
파일관련 데이터가 하나라도 있다면 멀티파트로.
나머지는 서버에서 처리.
file태그도 이름이 있어야 됨. name속성.


======================

정보로서의 HTML
처음에는 단지 웹 페이지를 보여주기 위한 언어.
정보를 표현하고 담아내기 위해 집중하도록 하기 위한, 여러가지 조치들에는 무엇이 있는지.

<font>태그. 쓰지말라고 설명드리는것.
쓰지 말라곤 하지만, 사람들이 많이 쓴다면 알고는 있어야함.

꾸미고자 하는 글을 <fon>태그로 감싸서 표현. 
size속성을 사용하여 1~7사이의 값을 통해 크기 지정 가능.
color속성을 통해 해당 글의 색상 변경이 가능.
문제는 font라는 태그 자체는 아무런 의미도 없다는 것. 시각적인 디자인일 뿐임.
또한 같은 구조가 여러번 등장한다고 한다면, 같은 <font>태그가 계속해서 나타나야됨.
html에서는 이런 시각적인 부분의 태그들을 퇴출시키면서 css라는 부분을 발전.


<meta> 어떤 데이터를 설명하는 데이터
웹 페이지 전체를 설명하는 데이터.
<meta charset="utf-8"> 문서의 캐리터셋 지정. 인코딩.
문서를 utf-8로 저장했다면, html을 통해 해당 문서를 웹 브라우저로 띄워줄 때에도 utf-8로 열어줘야함<meta charset>설정을 통해서 이 문서의 캐릭터셋을 알려주는 역할. 
없다면 브라우저별 기본 인코딩을 사용하게되며, 문서와 다르다면 깨지게됨.
<meta name="description" content="생활코딩의 소개자료">
이러한 정보는 웹 페이지에는 보여지지않음.
<meta name="keywords" content="코딩,coding,생활코딩,프로그래밍,html,css,javascript">
해당 웹 페이지를 설명하는 키워드를 지정.
<meta name="author" content="nickname">
<meta http-equiv="refresh" content="30">	//30초 간격 리프레쉬
이러한 meta는웹 페이지를 설명하는 역할을 하며, 이를 통해 외부에서 접근하거나 분류하거나 하는 방식으로 사용되기도 함.


semantic. 의미론적인.
정보로서의 가치 증가 :: 사람/기계에 응용하기 좋게 변화됨. 
의미론적인. 추상적이고광범위. 잘모르..
html태그 안에서 사용되는 여러 정보를 의미에 맞게 표현하기 위한 태그의 등장.
html5에 들어가면서 큰 기능은 없지만 어떤 정보인지를 확실하게 해주는 의미를 가지는 태그가 등장함.
좀더 의미론적으로 가치있는 페이지로 만드는 작업

<header> 아무런 기능도 없음. 이 웹페이지 전체에 대한 의미를 가지는 부분이다! 라고 알려주는것뿐.
<footer> 부가적인 정보를 넣거나 하는 곳. 개인보호정책같은 부분. 회사소개
html을 할때엔 의미에 집중. 디자인은 나중에 css로 하면 됨.
<nav> 네비게이션 역할. 컨텐츠를 탐색하는데 필요한 네비게이션 역할을 하는게 이것이다! 라는 느낌.
<article> 본문임을 알려줌. 본문이 여러개일 수 있음.  여러번 사용하면 됨.
여러 <article>은 <section>으로 묶어주면 됨.
<header>섹션, <nav>섹션,  <footer>섹션, 등등임.
의미론적 태그들은 웹사이트/문서르 만들 때 의미론적으로 묶어논 것.
그 외 애매한것들은 <section>으로.

=============================================

검색엔진 최적화
웹사이트 공개 --> 로봇.SW.html파일을 다운받아 기준에 따라 분류. 사용자들이 검색했을 때 검색에 가장 적합한 컨텐츠를 제공하는것이 검색엔진의 역할.
검색엔지 최적화는 검색됬을 때 상위에 노출 되고, 정보를 잘 제공할 수 있도록 하는것.
결론적으로는, html코드를 의미론적으로 의미론적 태그로 잘 설명하는게 기본.
Google. 검색엔진 최적화 가이드.
SEO(SearchEngine Optimizer)

---

웹개발자 도구
Chrome의 개발자도구. 그중에서도 html관련부분만.
개발자 도구를 통해 html코드를 볼 수 있음.
페이지 소스보기
html은 물론, 어떤 태그인지 왜 이런식으로 생겼는지. 어떠한 css의 코드가 적용되서 이런모양을 가지는지 표현(style)
toggleDㄷviceMode. 
데스크탑 환경이라면 데스크탑 환경개발에는 좋음.
웹사이트 구축때에 스마트폰과 같은 환경은 보기 어려움.
이것은 다양한 환경 시뮬레이션 기능임.
네트워크.
웹 서버로 부터 html을 받아서 보여주는게 웹 브라우저.
이들이 서로 주고받는 데이터들을 경우에 따라선 체크해야됨. 
무엇이 누락 / 지연 / 다운이 늦어 웹페이지가 지연되는지 등

---
모바일 지원
검사 -> toggleDeviceMode

컴퓨터환경이라면 넓게, 모바일이라면 좁게 쓸것임. 그것에 맞춰 웹 브라우저가 표시해주도록 정의.
<meta name="viewport" content="width=device-width, initial=-scale=1.0">
화면을 디바이스 폭만큼 지정., 모바일에서 화면을 키우고 늘리고 하는 게 가능. 1.0이란 아무런 변경 없는 상태에서 화면을 시작해라는 의미.
웹에서는 변동이 없게 보이지만, 화면이 작은 디바이스의 경우 해당 디바이스의 크기로 맞춰주는 코드임. 기계적으로 넣는다고 생각하면 되는 코드.

----
iframe

어떤 문서 안에 다른 문서의 내용을 그대로 가져오는 것.
<iframe src=불러오고자하는 웹 페이지 주소 width, height 포함 가능.></iframe>
youtube 소스코드 가져오기로 iframe사용 가능
주의.youtube같은 경우에는 안심하고 쓸 수 있지만, 출처가 의심되는 사이트에는 주의.사이트가 로딩되면서 공격을 가할 수 잇음.
iframe으로 가져온 다른 html의 컨텐츠의 script가 실행됨. 
--> 이런 일을 할 수 없도록 원천적인 차단이 필요함.
iframe속성에 sandbox속성을 적어줌.
sandbox는 스크립트와 같은 행위 차단해줌.
form역시 동작 안함. 공격의 위험으로.


외부의 컨텐츠를 가져오고자 할 때 사용함.


-----

HTML5
웹 페이지에 비디오 삽입. <video>
5이전에는 표준화된 삽입 방법이 없었음.
flash플러그인 형태의 프로그램으로 보여주곤 했음.
web.
html5에서 video태그 등장. 웹페이지에 삽입.
videos 디렉토리. 코덱이 다른 동일한 동영상 두개를 둠.
샘플.
http://techslides.com/sample-webm-ogg-and-mp4-video-files-for-html5​
<video>
  <source src="videos/small.mp4">
</video>
브라우저마자 지원하는 확장자가 다름. 크롬은 mp4지원. 하지만 파이어폭스는 아님.
<video>
  <source src="videos/small.mp4">
  <source src="videos/small.ogv">
</video>
여러가지 형태의 동영상 확장자를 기술해 준다면
웹브라우저는 자신이 지원하는 것 들중 가장 선호하는 방식을 알아서 선택하여 화면에 표시해줌.
? 이름이 동일하면 동일하다고 판단?
크기조정 ==>? video태그의 width값 조정.
controls 라고 적어준다면 컨트롤이 생성됨. 이는 따로 값은 없고 이름만 있는 속성.

-----
caniuse.com
새로운 태그는 많지만, 웹 브라우저가 다 달라 html5이전부터 있던 브라우저에는
html5가 작동 안할 수 있음.
웹 브라우저에 따라서 어떤 html5의 기능을 어떤건 제공을, 어떤건 하지 않음.
내가 이 기능이 필요한데, 현 시점에 이 기능을 웹 브라우저에 사용하는게 과연 타당한가?
얼마나 html5의 기술을 잘 지원하고 있는지
관련된 데이터를 제공하는 사이트.
다양한 최신기술에 대한 목록.
클릭시 그 기술의 현재 지원사항을 볼 수 있음.
데이터를 기반하여 내가 이 기술을 사용해도 되는지

------

html5의 입력양식
Form.과 관련해서도 대폭의 개선.된 사항도 있음. 새로운 제출 양식들.
<input태그의 타입이 다양해짐.
color  쉽게 컬러 선택
date  날짜 선택
  <input type date name datev
  사용자로 하여금 쉽게 나짜를 받을 스ㅜ 있는 UI생성.
  
datetime 
datetime-local
datatime --> 서버로 전송 될 때 국제 표준시로 전송
local은 현재 살고잇는 지역. 현재는 지원 안댐  
email 이메일 정보만 쉽게. 그리고 강제
  이메일을 입력. 이메일 주소가 아닐때에는 아니라는 에러메시지가 뜸. 
  모바일은 @표기됨.
month 월 지정
  년도와 월까지 입력가능함.datetime과 비교햇을때.
number
  <input type="number"> 사용자의 입력을 규제. 숫자만 입력가능. min, max를 통해 값 규정이 가능.
  모바일 웹 브라우저에서도 이를 인식하고 키보드를 해당 레이아웃으로 자동으로 바꿔줌.
  submit을 두고, 유효하지 않은 값의 범위를 넣고 제출시 브라우저가 거부하도록 동작함.
  엄격한 값의 체크가 가능함.
range  어떤 숫자의 범위.사용자가 슬라이드를 움직이면서 지정
  슬라이더가 생김.min속성과 max속성을 지정.
search  ?
  아무런 기능이 없음. 그런데 검색할 때 사용하는 텍스트필드라는, 정보로써의 가치가 있음.
tel	전화번호
  국가마다 형식이 다름.전화번호는.
  키패드 ui. 모바일에서는.

time	시간. 위의 date는 날짜. 아래time은 한시 두시 
  년도와 시간을 입력할 수 있는 화면이 뜸.
url	url정보
  url이 아닐때 아니라고 경고가 뜸.
  모바일에는 url입력 쉬운 ui
week	주.
  몇년도 몇번째주를 지정할수 있게 됨. 

폼.
html5입력양식의 속성들.
자동완성기능. 이를 명시적으로 활성화/비활성화 가능. autocomplete="on/off"
이때 특정 input타입에 대해서 자동완성 끄고싶다면, 해당input의 속성으로 autocomplete="off"
placeholder속성은 해당 input속성에 이 폼이 무엇을 하는것인지 알려주는 기능 가능.
자동 포커싱기능. autofocus속성 명시 값은 없음.


--
입력 값 체크
실수 혹은 악의적 의도로 유효하지 않거나 안전하지 않은 값 입력 검사.
validation.
이를 이용하며 자바스크립트 없이도 유효성검사가 가능해짐 thtml만으로
email타입 같은거도 일종의 form validator
input의 required속성을 명시해주면 해당 input이 비워질경우 메시지가 출력됨.
pattern속성. 가장 강력하지만 어려움.
속성값에는 정규표현식이 들어옴.
어떤 문자를 통해 어떤 패턴을 구현. 입력값이 해당 값의 범위인지 판단.
[a-zA-Z] 범위지정. 하나더.
. --> 어떤문자던 상관없음.
+를 붙이게되면, 1아니면 그 이상이라는 의미를 가짐.
<따로 정리 정규표현식은>
결국엔 서버에서 엄격한 테스트가 필요함.
 html에서 검증을 했어도 이를 뚫을수 있기때문에 서버에서 검증이 필수적. 너무 의존하지말것.


검색엔진 최적화는 나중에 따로 보는걸로.






==================================================================CSS
HTML이 웹페이지의 정보를 표현한다면, CSS는 HTML을보기 좋게 디자인 하는 역할.

소개.
웹 페이지를 꾸며주는 언어.
HTML기반. 
html의 본질 == 정보. 생산/보관
중요한건 어떻게 정보를 표현할 것인가. 였음.

태그에 디자인에 관련된 정보를 추가하게됨. 
디자인과 관련된 대표적인 태그<font> 지금은 사용 권장 안함
html이 커지면서 정보를 잘 표현하는게 중요해짐. 
html이 정보를 잘 표현하도록 디자인을 분리하여 css를 생성.
분화시켰을때의 이득 2가지.
html의 정보 전념.
css라는 언어는 디자인에 효율적인 문법 체계를 가짐.
<style>태그를 통해서 css문법을 사용 가능해짐.
정보와 디자인의 엄격한 분리.
웹 페이지를 해석(검색엔진 등)해야되는부분에서 더 효율적인 처리.
유지보수 측면에서 효율적.


실행방법 2가지
1) 인라인방식.
::태그의 속성에 style선언. style="color:red"
2) style태그사용.
h2{color:blue}와 같이 사용.


선택자.
인간의 언어의 주어와 같은 느낌. 선택자를 자유롭게 사용하지 못하면 css를 정복하지 못함.
style의 css속성에 여러개 지정시에는 세미콜론이 필요함.
text-decoration:underline 효과지정..

selector와 declaration.
selector는 어떤 태그인지
declaration은 프로퍼티와 value로 구분. 콜론은 value-property Separator.
세미콜론은 declaration separator.

선택자의 종류
효과를 주려고해도, 효과를 주려고 하는 대상을 정확히 집어낼 수 있어야 함.
1) 태그선택자. 모든 해당 태그를 선택하는 선택자.
2) 아이디 선택자. 
::해당 원하는 태그에 id속성으로 아이디를 부여.
::#id속성 을 <style>에 지정. 
결론. #은 id속성을 가리킴.
3) 클래스 선택자.
class속성. 모든 선택자중 class가 해당 값인 녀석에 대해 stype지정. style시에 .스타일명.
id와 class라는 말의 의미.
class. 그룹을 관리하기 위함.
id. 각각을 관리하기 위함.
id는 한번만 등장하도록.여러번 등장한다면 class를 통해 그룹핑
그룹핑을 한다는것은 같은 스타일을 지정한다는 것이지(의미?측면?에서) 다른 태그를 사용한다고 해당 클래스를 사용하지 못한다는것은 아님.

부모자식 선택자
선택자에서 띄워쓰기가 들어가면 이전 선택자 하위의 이후 선택자를 가리킴.
ul li{ ,,, } == ul 하위의 li
직계자손에 대해서만 css설정이 필요하다면, ol>li.
A>B 는 A의 직계자손중 B에 대해서 css설정.
일반 태그뿐만아니라 #C같은 id값 또는 .C같은 클래스값에도 직계자손관련 할당 가능.

다른 태그에 똑같은 CSS를 사용한다면
컴마를 사용하여 동시에 지정이 가능함.


선택자. css의 주어역할. 굉장히 중요함.
http://flukeout.github.io

cheatSheet.활용.
ex) google. css cheatSheet selector

pseudo class selector
모조의/가짜의/가상의 클래스 선택자
a:active{..} 활성화 되어있는. 한번 눌렀다면 웹브라우저에서는 보라색으로 변경되있는데 그때 호버시.
a:hover{...} 마우스를 위로 올렸을 때 설정시 active가 적용 안됨. 누른상태로 끌고 내려오면 active상태. 누르고만있으면 hover상태이므로 active시행 안됨.
hover를 먼저 작성하여 우선순위 조정도 가능함.
a:visited{..} 방문한. 기존 보라색.	//여러 보안적 문제로 일부 속성만 사용이 가능함.
a:link{..} 방문하지 않은 링크
a:focus{...} tab키를 누르면 포커싱 됨. 표시가 되고 여러 이유로 스타일 제일 나중에 선언.
inputLfocus{background-color:black; color:white}로 강조하는 방식도 가능함.

이후는 위 게임으로 선택자 공부...




속성.
통계. 중요한 속성으로 시작해서 덜 중요한 속성으로.
중요도. 정의. 빈도수.
https://developer.microsoft.com/en-us/microsoft-edge/platform/usage/


타이포그래피.(서체)
#1 font-size.
가장 많이 사용하는 속성.
쉬운주제인데 '단위'라는 어려운 주제가 있음.
px / em / rem 을 위주로 .
rem은 최근에 추가됨.
px : 고정적인 크기
em/rem : 브라우저 설정에 따라 크기가 달라짐.
오늘날에는 rem. 상황에 따라 다른걸 사용할 이유가 분명하지 않다면 rem.
폰트크기를 조정할 수 잇는 사용자의 권리.-->rem
가장큰 차이점. 사용자가 브라우저의 글자 크기를 바꿧을때 px은 안바뀌고 rem은 바뀜.
브라우저의 설정에서 content setting에서 web content 의 fontsize조정시 rem은 가변적으로 바뀜.
어떤 경우에도 고정적인 디자인이라면 px. 
사용자가 조절할 수 있도록 rem쓰는게 맞음.
검사 - element-computed 에서 html선택하면 현재 브라우저의 css가 나옴. 
1rem으로 햇을때 이부분과 rem의 font-size가 같은 px값으로 나오는것을 확인 가능함.
만약 2rem으로 하고 normal로 선택시 기본 16px . 32px값이 됨.

em은 부모태그에 영향을 받는 글자크기

#2 color.
크게 3가지 방식.
1) 색의 이름, h1{color:red;}
2) 16진수, h1{color:#00FF00;}
3) rgb. h1{color:rgb(255,255,255);}



w3school.com

255,255,255안의 색 == 트루컬러


text-align.
정렬.
style로 text-align지정. 
border:1px, solid gray.로 <p>범위 확인 가능.
Lorem ipsum generator.
의미 없는 테스트를 만들어주는 사이트.
text-align 속성으로 정렬이가능. 
justify 는 왼쪽과 오른쪽이 공평하게 차지. 중간의 텍스트 사이간격이 가변적으로 바꿔주었기 때문임.
left, right, center,등이 가능.


font
font-family 글꼴
:: 사용자의 컴퓨터에는 css를 작성한 사람이 원하는 폰트가 안깔려잇을 수 잇음.
:: 이어서 작성해주면 대체로 작성해줌 컴마로 구분. 
:: 띄어쓰기가 되었는 폰트는 " "로 묶어줘야됨. ex) "Helvetica Neue"

:: 마지막에는 serif(장식이잇는것), Sans-serif(장식이없는것) 붙여줘야 함.
:: 선호하는 녀석들이 없다면 해당 있는것 또는 없는것중 하나를 보여줌.
:: monospace는 고정폭. 좀 정리되어있는 느낌

font-weight 두께
:: bold. 두꺼워짐. 픽셀로 지정도 가능.
line-height 행과 행 사이의 간격.
:: 기본값은 1.2. 폰트값의 상대적인 간격으로 조정됨.
:: 120px같이 고정된 값 할당도 가능함. 
:: 고정된 길이는 부자연스러울 수 있기때문에 상대적인 수치 사용이 좋음.
font 프로퍼티
:: font프로퍼티는 순서를 지켜야 함.
:: font: font-style font-variant font-weight font-size/line-height font-family|caption|icon|menu|message-box|small-caption|status-bar|initial|inherit; 
::이때 font-size와 font-familly는 필수적임.


http://software.naver.com/software/fontList.nhn?categoryId=I0000000#brandId=
무료 폰트 다운 사이트.


웹 폰트.
꼭 사용하는게 바람직하다고 할 수는 없음
사용자가 가지고있지 않은 경우에는 깨질 수 있음.
없다면 서버에서 다운받아서 사용할 수 있도록 하는 방법.
가장 큰 걸림돌은 폰트의 용량.
영문은 아니지만
한글은 용량이 상당히 큼.
https://fonts.google.com/
구글이 제공하는 폰트 사이트.

선택.
임베디드. :: 포함시킬 수 잇는 방법.
<link 를 카피.
<head 태그 아래에 구글에서 보여준 태그를 넣어주면 됨.
css에서 사용하고싶다면 font Family에서 이걸 적어라, 라는 부분도 잇음.

개발자 도구를 열어서 network를 보게되면, 서버로부터 어떤 파일을 다운받았는지를 볼 수 있음.
그러면 폰트를 다운받았음을 확인 가능.
해당 href에 해당되는 링크.
모르면 마법. 알면 기술 ㅋㅋ
각각의 폰트 정보에 맞는 정보를 다운하는 것.

font face generator.
Web-font generator
웹 폰트를 만드는 것.
음. 이부분은 잘 모르겠다



조화.
HTML은 중첩된 구조를 가지고 있으며, 다양한 요소의 영향을 받기 때문에 여러 효과가 엘리먼트를 두고 대치할 때에 어떤 효과의 손을 들어줘야 하는지에 대한 결정이 필요함.


상속.
부모 엘리먼트의 속성을 자식 엘리먼트가 물려받는 것.
CSS에서 생산성을 높이기 위한 중요한 기능.
하위 엘리먼트가 부모 엘리먼트의 속성을 이어받는 것.
생산성과 관련됨.

오...html{color:red;}하면 기본 모든 컬러가 바뀜.
결과적으로 부모의 속성 변경이 효율적.
개발자도구 - 검사 를 보게되면 inherited from html을 볼 수 있음.
body에 선을 추가하더라도 하위태그들에 선이 추가되지는 않음.
태그중에서도 상속이 유리한 태그가 있고 아닌게 있기때문임.
https://www.w3.org/TR/CSS21/propidx.html
inherited 속성을 보게되면 됨.
외운다기보단 실무에서 이러한 현상이 발생됬을 때, 그 이유를 찾을수 있으면 됨.


stylish.
공부도 중요하지만, 사용하는게 중요.
stylish extension
오...개신기하네 이거


캐스케이딩(Cascading)
CSS(Cascading Style Sheet)
하나의 엘리먼트에 대해서 다양한 효과가 영향력을 행사하려고 할 때 우선순위를 어떻게 설정하는가에 대한 규칙.

웹브라우저. html을 해석. 기본적인 디자인은 되어있음.
사용자도 자기가 보는 웹 브라우저에 대한 결정권이 있어야 된다!
웹 페이지 제작자도 자기가 만든 웹 페이지가 어떤 모습으로 보여야 하는지 결정권이 있어야 한다!
3자가 서로 조화를 이뤄서 웹을 만듬.
--> CSS.
--> 우선순위가 필요하게 됨.

웹브라우저 < 사용자 < 저자. :: 기본적인 규칙.
사용자가 바꾸는 경우는 사실 많지않음.
저자가 가장 강함.
stylish라는 확장기능이 있어야 바꿀 수 있게됨 보통 사용자는.
아래부터는 코드로 보는게 나음.

하나의 태그에 여러 css가 중첩될 때.
하나의 엘리먼트에 태그스타일, id속성,class속성, 인라인속성 모두 줄 경우.
1) 인라인	style attribute
2) id	id selector
3) class	class selector
4) 태그	tag selector
의 우선순위를 가짐.
이 우선순위는 가장 중요한 캐스케이딩 규칙임.
왜그럴까?
무엇이 더 구체적이고 명시적인지? 뭐가 더 포괄적이고 일반적인지?
태그가 가장 포괄적.
그다음은 클래스가 포괄적.
이후 id
그리고 style속성.

기본적으로 가장 포괄적인 태그를 먼저지정하고
나머지 다른부분에 속성을 주는게 효율적임.

우선순위를 뛰어넘는 방법.
속성값에 !important; 를 붙여주게되면 우선순위가 급상승하게됨. style속성보다 높은 우선순위.






